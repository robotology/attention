// -*- mode:C++; tab-width():4; c-basic-offset:4; indent-tabs-mode:nil -*-

/* 
 * Copyright (C) 2011 RobotCub Consortium, European Commission FP6 Project IST-004370
 * Authors: Rea Francesco, Shashank Pathak
 * email:   francesco.rea@iit.it, shashank.pathak@iit.it
 * website: www.robotcub.org 
 * Permission is granted to copy, distribute, and/or modify this program
 * under the terms of the GNU General Public License, version 2 or any
 * later version published by the Free Software Foundation.
 *
 * A copy of the license can be found at
 * http://www.robotcub.org/icub/license/gpl.txt
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
 * Public License for more details
 */

/**
 * @file config.h
 * @brief Configuration file, mainly for values of separable filters (calculated through SVD function of MATLAB).Method
 * to do so for filter F could be: 1. [u s v] = svd(F) 2. Normalize columns of u and v, by sqrt of largest singular
 * value ie s(1,1)
 */

#ifndef _CONFIG_EARLY_VISION_H
#define _CONFIG_EARLY_VISION_H


// Definitions for Sobel filter, for edge detection
#define SobelOutputImage yarp::sig::ImageOf<yarp::sig::PixelFloat>
#define SobelOutputImagePtr float
#define SOBEL_FLICKER 10
#define SOBEL_SHIFT 0
#define SOBEL_FACTOR .0005


#define KirschOutputImage yarp::sig::ImageOf<yarp::sig::PixelFloat>
#define KirschOutputImagePtr float
#define KIRSCH_FLICKER 10
#define KIRSCH_SHIFT 50
#define KIRSCH_FACTOR .0005




// 5x5 Sobel matrix is non-separable (has rank 2), hence convolution is 2D
static float Sobel2DXgrad[25] = {1, 2, 0, -2 ,-1,
                                 4, 8, 0, -8, -4,
                                 6, 12, 0, -12, -6,
                                 4, 8, 0, -8, -4,
                                 1, 2, 0, -2 ,-1};

static float Sobel2DYgrad[25] = {-1, -4, -6, -4, -1,
                                 -2, -8, -12, -8, -2,
                                 0, 0, 0, 0, 0,
                                 2, 8, 12, 8, 2,
                                  1, 4, 6, 4, 1};

// Gaussian matrix is always separable, sigma here is 1
static float G5[5] = { -0.0545f,
                       -0.2442f,
                       -0.4026f,
                       -0.2442f,
                       -0.0545f
                     };
// Gaussian matrix is always separable, sigma here is 3 times that of positive Gaussian
static float GN7[7] = {      -0.1063f,
                           -0.1403f,
                           -0.1658f,
                           -0.1752f,
                           -0.1658f,
                           -0.1403f,
                           -0.1063f
                    };

// Kirsch matrix is non-separable, these directions are 8 namely N, NE, E, ...
static float K1[9] = {+3,  	+3,  	+3,
                        +3, 	0, 	+3,
                        -5, 	-5, 	-5};
static float K2[9] = {+3,  	+3,  	+3,
                        -5, 	0, 	+3,
                        -5, 	-5, 	+3};
static float K3[9] = {  5,  	+3,  	+3,
                        -5, 	0, 	+3,
                        -5, 	+3, 	+3};
static float K4[9] = {-5,  	-5,  	+3,
                        -5, 	0, 	+3,
                        +3, 	+3, 	+3};
static float K5[9] = {-5,  	-5,  	-5,
                        +3, 	0, 	+3,
                        +3, 	+3, 	+3};
static float K6[9] = {+3,  	-5,  	-5,
                        +3, 	0, 	-5,
                        +3, 	+3, 	+3};
static float K7[9] = {+3,  	+3,  	-5,
                        +3, 	0, 	-5,
                        +3, 	+3, 	-5};
static float K8[9] = {+3,  	+3,  	+3,
                        +3, 	0, 	-5,
                        +3, 	-5, 	-5};

const int maxKernelSize = 5;

/* // OTHER VALUES



static float Sobel3XHorz[3] = {1.3161f, 0 ,-1.3161f};
static float Sobel3XVert[3] = {-.7598f, -1.5197f,-.7598f};
static float Sobel3YHorz[3] = {.7598f, 1.5197f,.7598f};
static float Sobel3YVert[3] = {-1.3161f, 0 ,1.3161f};

static float GN9[9] = { -0.0630f,               // for negative Gaussian, sigma is 3 here
                       -0.0929f,
                       -0.1226f,
                       -0.1449f,
                       -0.1532f,
                       -0.1449f,
                       -0.1226f,
                       -0.0929f,
                       -0.0630f
                    };

static float GN11[11] = {    -0.0355f,
                           -0.0585f,
                           -0.0863f,
                           -0.1139f,
                           -0.1346f,
                           -0.1423f,
                           -0.1346f,
                           -0.1139f,
                           -0.0863f,
                           -0.0585f,
                           -0.0355f
                        };

static float GN13[13] = {    -0.0185f,
                           -0.0342f,
                           -0.0563f,
                           -0.0831f,
                           -0.1097f,
                           -0.1296f,
                           -0.1370f,
                           -0.1296f,
                           -0.1097f,
                           -0.0831f,
                           -0.0563f,
                           -0.0342f,
                           -0.0185f
                        };

static float GN15[15] = {    -0.0088f,
                           -0.0182f,
                           -0.0336f,
                           -0.0553f,
                           -0.0816f,
                           -0.1078f,
                           -0.1273f,
                           -0.1346f,
                           -0.1273f,
                           -0.1078f,
                           -0.0816f,
                           -0.0553f,
                           -0.0336f,
                           -0.0182f,
                           -0.0088f
                        };

static float GN17[17] = {    -0.0038f,
                           -0.0088f,
                           -0.0181f,
                           -0.0333f,
                           -0.0549f,
                           -0.0810f,
                           -0.1070f,
                           -0.1264f,
                           -0.1336f,
                           -0.1264f,
                           -0.1070f,
                           -0.0810f,
                           -0.0549f,
                           -0.0333f,
                           -0.0181f,
                           -0.0088f,
                           -0.0038f
                        };

static float GN19[19] = {    -0.0015f,
                           -0.0038f,
                           -0.0088f,
                           -0.0180f,
                           -0.0332f,
                           -0.0548f,
                           -0.0808f,
                           -0.1066f,
                           -0.1260f,
                           -0.1332f,
                           -0.1260f,
                           -0.1066f,
                           -0.0808f,
                           -0.0548f,
                           -0.0332f,
                           -0.0180f,
                           -0.0088f,
                           -0.0038f,
                           -0.0015f
                        };

static float GP5[5] = { -0.0545f,
                       -0.2442f,
                       -0.4026f,
                       -0.2442f,
                       -0.0545f
                     };

static float GP7[7] = {   -0.0044f,
                           -0.0540f,
                           -0.2420f,
                           -0.3991f,
                           -0.2420f,
                           -0.0540f,
                           -0.0044f
                        };

static float GP9[9] = {    -0.0001f,
                           -0.0044f,
                           -0.0540f,
                           -0.2420f,
                           -0.3989f,
                           -0.2420f,
                           -0.0540f,
                           -0.0044f,
                           -0.0001f
                    };

static float GP11[11] = {     -0.0000f,
                           -0.0001f,
                           -0.0044f,
                           -0.0540f,
                           -0.2420f,
                           -0.3989f,
                           -0.2420f,
                           -0.0540f,
                           -0.0044f,
                           -0.0001f,
                           -0.0000f
                        };

static float GP13[13] = {    -0.0000f,
                           -0.0000f,
                           -0.0001f,
                           -0.0044f,
                           -0.0540f,
                           -0.2420f,
                           -0.3989f,
                           -0.2420f,
                           -0.0540f,
                           -0.0044f,
                           -0.0001f,
                           -0.0000f,
                           -0.0000f
                        };

*/
/*
static float Gabor0[7][7]={0.000004 , 0.000507 , 0.009155 , 0.024018 , 0.009155 , 0.000507 , 0.000004 , 
0.000023 , 0.002895 , 0.052271 , 0.137134 , 0.052271 , 0.002895 , 0.000023 , 
0.000066 , 0.008234 , 0.148672 , 0.390039 , 0.148672 , 0.008234 , 0.000066 , 
0.000094 , 0.011666 , 0.210643 , 0.552621 , 0.210643 , 0.011666 , 0.000094 , 
0.000066 , 0.008234 , 0.148672 , 0.390039 , 0.148672 , 0.008234 , 0.000066 , 
0.000023 , 0.002895 , 0.052271 , 0.137134 , 0.052271 , 0.002895 , 0.000023 , 
0.000004 , 0.000507 , 0.009155 , 0.024018 , 0.009155 , 0.000507 , 0.000004 };
static float Gabor45[7][7]={0.034029 , 0.011588 , 0.000071 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.011588 , 0.160103 , 0.039997 , 0.000181 , 0.000000 , 0.000000 , 0.000000 , 
0.000071 , 0.039997 , 0.405435 , 0.074309 , 0.000246 , 0.000000 , 0.000000 , 
0.000000 , 0.000181 , 0.074309 , 0.552621 , 0.074309 , 0.000181 , 0.000000 , 
0.000000 , 0.000000 , 0.000246 , 0.074309 , 0.405435 , 0.039997 , 0.000071 , 
0.000000 , 0.000000 , 0.000000 , 0.000181 , 0.039997 , 0.160103 , 0.011588 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000071 , 0.011588 , 0.034029 };
static float Gabor90[7][7]={0.000004 , 0.000023 , 0.000066 , 0.000094 , 0.000066 , 0.000023 , 0.000004 , 
0.000507 , 0.002895 , 0.008234 , 0.011666 , 0.008234 , 0.002895 , 0.000507 , 
0.009155 , 0.052271 , 0.148672 , 0.210643 , 0.148672 , 0.052271 , 0.009155 , 
0.024018 , 0.137134 , 0.390039 , 0.552621 , 0.390039 , 0.137134 , 0.024018 , 
0.009155 , 0.052271 , 0.148672 , 0.210643 , 0.148672 , 0.052271 , 0.009155 , 
0.000507 , 0.002895 , 0.008234 , 0.011666 , 0.008234 , 0.002895 , 0.000507 , 
0.000004 , 0.000023 , 0.000066 , 0.000094 , 0.000066 , 0.000023 , 0.000004 };
static float GaborM45[7][7]={0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000071 , 0.011588 , 0.034029 , 
0.000000 , 0.000000 , 0.000000 , 0.000181 , 0.039997 , 0.160103 , 0.011588 , 
0.000000 , 0.000000 , 0.000246 , 0.074309 , 0.405435 , 0.039997 , 0.000071 , 
0.000000 , 0.000181 , 0.074309 , 0.552621 , 0.074309 , 0.000181 , 0.000000 , 
0.000071 , 0.039997 , 0.405435 , 0.074309 , 0.000246 , 0.000000 , 0.000000 , 
0.011588 , 0.160103 , 0.039997 , 0.000181 , 0.000000 , 0.000000 , 0.000000 , 
0.034029 , 0.011588 , 0.000071 , 0.000000 , 0.000000 , 0.000000 , 0.000000 };
*/

/*float Gabor0[7][7]={0.000000 , 0.000000 , 0.000000 , 0.144106 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.822803 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 2.340231 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 3.315728 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 2.340231 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.822803 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.144106 , 0.000000 , 0.000000 , 0.000000 };*/
/*
float Gabor45[7][7]={0.204177 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.960616 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 2.432608 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 3.315728 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 2.432608 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.960616 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.204177 };

float Gabor90[7][7]={0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.144106 , 0.822803 , 2.340231 , 3.315728 , 2.340231 , 0.822803 , 0.144106 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 };

float GaborM45[7][7]={0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.204177 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.960616 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 2.432608 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 0.000000 , 3.315728 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.000000 , 2.432608 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.000000 , 0.960616 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
0.204177 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 };
*/

/*={0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000001 , 0.000001 , 0.000001 , 0.000002 , 0.000002 , 0.000002 , 0.000001 , 0.000001 , 0.000001 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 
-0.000000 , -0.000000 , -0.000001 , -0.000002 , -0.000003 , -0.000005 , -0.000007 , -0.000010 , -0.000011 , -0.000012 , -0.000011 , -0.000010 , -0.000007 , -0.000005 , -0.000003 , -0.000002 , -0.000001 , -0.000000 , -0.000000 , 
0.000000 , 0.000001 , 0.000003 , 0.000005 , 0.000010 , 0.000016 , 0.000023 , 0.000031 , 0.000037 , 0.000039 , 0.000037 , 0.000031 , 0.000023 , 0.000016 , 0.000010 , 0.000005 , 0.000003 , 0.000001 , 0.000000 , 
-0.000001 , -0.000002 , -0.000005 , -0.000011 , -0.000021 , -0.000034 , -0.000050 , -0.000066 , -0.000079 , -0.000083 , -0.000079 , -0.000066 , -0.000050 , -0.000034 , -0.000021 , -0.000011 , -0.000005 , -0.000002 , -0.000001 , 
0.000001 , 0.000003 , 0.000008 , 0.000017 , 0.000031 , 0.000050 , 0.000074 , 0.000098 , 0.000116 , 0.000122 , 0.000116 , 0.000098 , 0.000074 , 0.000050 , 0.000031 , 0.000017 , 0.000008 , 0.000003 , 0.000001 , 
-0.000001 , -0.000003 , -0.000007 , -0.000014 , -0.000026 , -0.000042 , -0.000062 , -0.000082 , -0.000097 , -0.000103 , -0.000097 , -0.000082 , -0.000062 , -0.000042 , -0.000026 , -0.000014 , -0.000007 , -0.000003 , -0.000001 , 
-0.000000 , -0.000001 , -0.000002 , -0.000004 , -0.000008 , -0.000013 , -0.000019 , -0.000025 , -0.000029 , -0.000031 , -0.000029 , -0.000025 , -0.000019 , -0.000013 , -0.000008 , -0.000004 , -0.000002 , -0.000001 , -0.000000 , 
0.000003 , 0.000008 , 0.000018 , 0.000037 , 0.000068 , 0.000112 , 0.000165 , 0.000218 , 0.000258 , 0.000272 , 0.000258 , 0.000218 , 0.000165 , 0.000112 , 0.000068 , 0.000037 , 0.000018 , 0.000008 , 0.000003 , 
-0.000006 , -0.000015 , -0.000034 , -0.000070 , -0.000129 , -0.000213 , -0.000314 , -0.000414 , -0.000489 , -0.000517 , -0.000489 , -0.000414 , -0.000314 , -0.000213 , -0.000129 , -0.000070 , -0.000034 , -0.000015 , -0.000006 , 
0.000007 , 0.000018 , 0.000041 , 0.000084 , 0.000155 , 0.000256 , 0.000377 , 0.000498 , 0.000588 , 0.000622 , 0.000588 , 0.000498 , 0.000377 , 0.000256 , 0.000155 , 0.000084 , 0.000041 , 0.000018 , 0.000007 , 
-0.000006 , -0.000015 , -0.000034 , -0.000070 , -0.000129 , -0.000213 , -0.000314 , -0.000414 , -0.000489 , -0.000517 , -0.000489 , -0.000414 , -0.000314 , -0.000213 , -0.000129 , -0.000070 , -0.000034 , -0.000015 , -0.000006 , 
0.000003 , 0.000008 , 0.000018 , 0.000037 , 0.000068 , 0.000112 , 0.000165 , 0.000218 , 0.000258 , 0.000272 , 0.000258 , 0.000218 , 0.000165 , 0.000112 , 0.000068 , 0.000037 , 0.000018 , 0.000008 , 0.000003 , 
-0.000000 , -0.000001 , -0.000002 , -0.000004 , -0.000008 , -0.000013 , -0.000019 , -0.000025 , -0.000029 , -0.000031 , -0.000029 , -0.000025 , -0.000019 , -0.000013 , -0.000008 , -0.000004 , -0.000002 , -0.000001 , -0.000000 , 
-0.000001 , -0.000003 , -0.000007 , -0.000014 , -0.000026 , -0.000042 , -0.000062 , -0.000082 , -0.000097 , -0.000103 , -0.000097 , -0.000082 , -0.000062 , -0.000042 , -0.000026 , -0.000014 , -0.000007 , -0.000003 , -0.000001 , 
0.000001 , 0.000003 , 0.000008 , 0.000017 , 0.000031 , 0.000050 , 0.000074 , 0.000098 , 0.000116 , 0.000122 , 0.000116 , 0.000098 , 0.000074 , 0.000050 , 0.000031 , 0.000017 , 0.000008 , 0.000003 , 0.000001 , 
-0.000001 , -0.000002 , -0.000005 , -0.000011 , -0.000021 , -0.000034 , -0.000050 , -0.000066 , -0.000079 , -0.000083 , -0.000079 , -0.000066 , -0.000050 , -0.000034 , -0.000021 , -0.000011 , -0.000005 , -0.000002 , -0.000001 , 
0.000000 , 0.000001 , 0.000003 , 0.000005 , 0.000010 , 0.000016 , 0.000023 , 0.000031 , 0.000037 , 0.000039 , 0.000037 , 0.000031 , 0.000023 , 0.000016 , 0.000010 , 0.000005 , 0.000003 , 0.000001 , 0.000000 , 
-0.000000 , -0.000000 , -0.000001 , -0.000002 , -0.000003 , -0.000005 , -0.000007 , -0.000010 , -0.000011 , -0.000012 , -0.000011 , -0.000010 , -0.000007 , -0.000005 , -0.000003 , -0.000002 , -0.000001 , -0.000000 , -0.000000 , 
0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000001 , 0.000001 , 0.000001 , 0.000002 , 0.000002 , 0.000002 , 0.000001 , 0.000001 , 0.000001 , 0.000000 , 0.000000 , 0.000000 , 0.000000 , 0.000000  };
*/

#endif

//----- end-of-file --- ( next line intentionally left blank ) ------------------

